apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: terraform-workflow-template
  namespace: argo
spec:
  entrypoint: terraform-workflow
  podGC:
    strategy: OnWorkflowSuccess
  arguments:
    parameters:
    - name: environment_name
      value: mht
    - name: resource_group_name
      value: service-aks-infrastructure-{{workflow.parameters.environment_name}}
    - name: storage_account_name
      value: serviceterraformstate{{workflow.parameters.environment_name}}
    - name: container_name
      value: terraformstate
    - name: key
      value: k8s.tfstate
  templates:
  - name: terraform-workflow 
    steps:
    - - name: git-clone-terraform
        templateRef:
          name: git-clone-template
          template: git-clone
        arguments:
          parameters:
          - name: ssh-url
            value: "git@github.com:Open-Dataplatform/platform.git"

      - name: infrastructure-check
        templateRef:
          name:  az-base-template
          template:  az-base
        arguments:
          parameters:
          - name: script
            value: |
              if [[ $(az storage account check-name -n ${{ parameters.storageAccountName }} --query "reason") != *"AlreadyExists"* ]] ;
              then
                echo "{{workflow.parameters.storage_account_name}} exists"
              else
                echo "{{workflow.parameters.storage_account_name}} does not exist.."
                
                echo "Creating {{workflow.parameters.resource_group_name}}"
                az group create -n {{workflow.parameters.resource_group_name}} -l westeurope
                
                echo "Creating {{workflow.parameters.storage_account_name}}"
                az storage account create -g {{workflow.parameters.resource_group_name}} -n {{workflow.parameters.storage_account_name}} -l westeurope --sku Standard_LRS
                az storage container create -n terraformstate --account-name {{workflow.parameters.storage_account_name}}
              fi

    - - name: azure-terraform-init
        templateRef:
          name: terraform-base-template
          template: terraform-base
        arguments:
          parameters:
          - name: action
            value: init
          - name: args
            value: -backend-config="storage_account_name={{workflow.parameters.storage_account_name}}" -backend-config="container_name={{workflow.parameters.container_name}}" -backend-config="key={{workflow.parameters.key}}" -backend-config="resource_group_name={{workflow.parameters.resource_group_name}}" 
          - name: terraform-path
            value: ./azure
          artifacts:
          - name: terraform-folder
            from: "{{steps.git-clone-terraform.outputs.artifacts.repo}}"

    - - name: azure-terraform-plan
        templateRef:
          name: terraform-base-template
          template: terraform-base
        arguments:
          parameters:
          - name: action
            value: plan
          - name: args
            value: '-lock=false -var=environmentName={{workflow.parameters.environment_name}}'
          - name: terraform-path
            value: ./azure
          artifacts:
          - name: terraform-folder
            from: "{{steps.azure-terraform-init.outputs.artifacts.terraform-folder}}"

    - - name: azure-terraform-apply
        templateRef:
          name: terraform-base-template
          template: terraform-base
        arguments:
          parameters:
            - name: action
              value: apply
            - name: args
              value: "-auto-approve -var=environmentName={{workflow.parameters.environment_name}}"
            - name: terraform-path
              value: ./azure
          artifacts:
            - name: terraform-folder
              from: "{{steps.azure-terraform-init.outputs.artifacts.terraform-folder}}"

    outputs:
      artifacts:
      - name: kube-config
        from: '{{steps.azure-terraform-apply.outputs.artifacts.kube-config}}'
      - name: values
        from: '{{steps.azure-terraform-apply.outputs.artifacts.values}}'
      parameters:
      - name: fqdn
        valueFrom:
          parameter: '{{steps.azure-terraform-apply.outputs.parameters.fqdn}}'