apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: docker-build-workflow-template
  namespace: argo
spec:
  entrypoint: docker-build-workflow
 
  templates:
  - name: docker-build-workflow
    inputs:
      parameters:
      - name: ssh-url
      - name: repo-name
    steps:
    - - name: git-clone
        templateRef:
          name: git-clone-template
          template: git-clone
        arguments:
          parameters:
          - name: ssh-url
            value: "{{inputs.parameters.ssh-url}}"
    - - name: docker-build
        template: buildkit
        arguments:
          artifacts:
          - name: repo
            from: "{{steps.git-clone.outputs.artifacts.repo}}"
          parameters:
          - name: repo-name
            value: "{{inputs.parameters.repo-name}}"

  - name: buildkit
    inputs:
      parameters:
      - name: repo-name
      artifacts:
      - name: repo
        path: /repo
    # Mount the configuration so we can push the image.
    # This should create the /.docker/config.json file.
    volumes:
      - name: docker-config
        secret:
          secretName: 'docker-config-{{inputs.parameters.repo-name}}-file'
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/main: unconfined
    container:
      image: moby/buildkit:master-rootless
      volumeMounts:
        - name: docker-config
          mountPath: /.docker
      workingDir: /repo
      env:
        - name: BUILDKITD_FLAGS
          value: --oci-worker-no-process-sandbox
        - name: BUILDCTL_CONNECT_RETRIES_MAX
          value: "20"
        - name: DOCKER_CONFIG
          value: /.docker
      command:
        - buildctl-daemonless.sh
      args:
        - build
        - --frontend
        - dockerfile.v0
        - --local
        - context=./src/
        - --local
        - dockerfile=./.docker/
        - --output
        - type=image,name=observability.westeurope.cloudapp.azure.com/{{inputs.parameters.repo-name}}/{{inputs.parameters.repo-name}},push=true
      