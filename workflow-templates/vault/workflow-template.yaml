apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: vault-workflow-template
  namespace: argo
spec:
  entrypoint: vault-workflow
  podGC:
    strategy: OnWorkflowSuccess
  templates:
  - name: vault-workflow
    inputs:
      artifacts:
      - name: kube-config
    steps:
    - - name: kubectl-unseal-vault
        templateRef:
          name: vault-base-template
          template: vault-base
        arguments:
          parameters:
          - name: script
            value: |
              # while [[ $(kubectl get pods tooling-vault-0 -n vault -o 'jsonpath={.status.containerStatuses[?(@.name=="vault")].started}') != "true" ]]; do echo "waiting for vault container to start" && sleep 10; done;
              # while [[ $(kubectl get pods tooling-vault-0 -n vault -o 'jsonpath={.status.phase}') != "Running" ]]; do echo "waiting for pod to be running" && sleep 10; done;
              echo "Starting vault init"
              echo "Sleeping for 60s";
              sleep 60;
              
              export VAULTAMOUNT=$(kubectl get pods -n vault -o=name | grep 'tooling-vault-[0-9]' | wc -l);

              for i in `seq 0 $(($VAULTAMOUNT-1))`;
              do
                echo "trying to gen keys from vault-$i"
                kubectl exec -i tooling-vault-$i -n vault -- vault operator init -format=json > cluster-keys.json || true;
                sleep 10;
                if [ -s cluster-keys.json ]; 
                then
                  echo "Got the keys from vault-$i";
                  break;
                else
                  echo "Failed to get keys from vault-$i" >&2;
                fi
                sleep 10;
              done

              if [ ! -s cluster-keys.json ]; 
              then
                echo "Failed to get keys" >&2;
                exit 69;
              fi

              kubectl create secret generic unseal-keys --from-file=cluster-keys.json -n vault --dry-run=client -o yaml | kubectl apply -n vault -f -;
              echo "Unsealing vault..";
              for i in `seq 0 $(($VAULTAMOUNT-1))`;
              do
                for j in `seq 0 2`;
                do
                  while [[ $(kubectl get pods tooling-vault-$i -n vault -o 'jsonpath={.status.phase}') != "Running" ]]; do echo "waiting for vault-$i" && sleep 5; done;
                  kubectl exec -i tooling-vault-$i -n vault -- vault operator unseal $(cat cluster-keys.json | jq -r ".unseal_keys_b64[$j]");
                  sleep 5;
                done
              done
          artifacts:
          - name: kube-config
            from: '{{inputs.artifacts.kube-config}}'