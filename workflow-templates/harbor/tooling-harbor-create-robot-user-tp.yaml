apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: tooling-harbor-create-robot-account-tp
  namespace: argo
spec:
  entrypoint: create-robot-account
  templates:
    - name: create-robot-account
      metadata:
        annotations:
          vault.hashicorp.com/agent-inject: "true"
          vault.hashicorp.com/role: "k8s-secrets"
          vault.hashicorp.com/agent-inject-secret-harbor-creds: "k8s/data/secrets/harbor"
          vault.hashicorp.com/agent-inject-template-harbor-creds: |
            {{ with secret "k8s/data/secrets/harbor" -}}
              export harborUser={{ .Data.data.username }}
              export harborPass={{ .Data.data.password }}
            {{- end }}
          vault.hashicorp.com/agent-inject-secret-server-url: "k8s/data/configs/server-url"
          vault.hashicorp.com/agent-inject-template-server-url: |
            {{ with secret "k8s/data/configs/server-url" -}}
              export serverUrl={{ .Data.data.url }}
            {{- end }}
      inputs:
        parameters:
          - name: repo-name
        artifacts:
          - name: jq
            path: /bin/jq
            mode: 0755
            http:
              url: https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
      container:
        image: alpine/k8s:1.13.12
        command: [sh, -c]
        args:
          - >
            for f in /vault/secrets/*; do . $f; done;

            projectId=$(curl -X GET -u "$harborUser:$harborPass" "https://$serverUrl/api/v2.0/projects?name={{inputs.parameters.repo-name}}" -H  "accept: application/json" --silent | jq -r ".[].project_id")

            robotAccount=$(curl -X POST -u "$harborUser:$harborPass" "https://$serverUrl/api/v2.0/projects/$projectId/robots" -H  "accept: application/json" -H  "Content-Type: application/json" --silent -d "{
              \"access\": [
                {
                  \"resource\": \"/project/$projectId/repository\",
                  \"action\": \"push\"
                }
              ],  
              \"name\": \"argo\",
              \"expires_at\": -1,
              \"description\": \"robot account for automated docker build\"
              }");

            export username="$(echo $robotAccount | jq '.name')";
            export password="$(echo $robotAccount | jq '.token')";

            export authString=$(echo -n "$username:$password" | tr -d '\"');

            echo "{"\"auths\"":{"\"https://$serverUrl/v2/\"":{"\"auth\"":"\"$(echo -n $authString | base64)\""}}}" > /config.json
      outputs:
        parameters:
        - name: config-json
          valueFrom:
            default: ''
            path: /config.json