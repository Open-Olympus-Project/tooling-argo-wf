apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: tooling-harbor-create-project-wf-tp
  namespace: argo
spec:
  entrypoint: workflow
  podGC:
    strategy: OnWorkflowSuccess
  templates:
  - name: workflow
    inputs:
      parameters:
      - name: repo-name
    steps:
    - - name: harbor-create-project
        templateRef:
          name: tooling-harbor-create-project-tp
          template: create-harbor-project
        arguments:
          parameters:
            - name: repo-name
              value: "{{inputs.parameters.repo-name}}"
            - name: is-public
              value: 'true'
    - - name: harbor-create-robot-account
        templateRef:
          name: tooling-harbor-create-robot-account-tp
          template: create-robot-account
        when: "{{steps.harbor-create-project.outputs.parameters.project-exists}} == false"
        arguments:
          parameters:
            - name: repo-name
              value: "{{inputs.parameters.repo-name}}"
    - - name: vault-add-robot-crds
        templateRef:
          name: tooling-vault-logged-in-url-template
          template: vault-logged-in-url
        when: "{{steps.harbor-create-project.outputs.parameters.project-exists}} == false"
        arguments:
          parameters:
            - name: script
              value: |
                {{item.initScript}} {{item.value}} | vault kv {{item.action}} {{item.keyPath}} {{item.valueName}}=-;
        withItems:
        - {
            keyPath: "k8s/tooling-harbor-robot-accounts/{{inputs.parameters.repo-name}}",
            action: put,
            valueName: authFile,
            value: "echo {{steps.harbor-create-robot-account.outputs.parameters.config-json}} | tr -d ' ' | tr -d '\n'",
            initScript: ""
          }