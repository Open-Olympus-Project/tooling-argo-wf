apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: oauth-enable-vault-wf-tp
  namespace: argo
spec:
  entrypoint: oauth-enable-vault-wf
  podGC:
    strategy: OnWorkflowSuccess
  templates:
    - name: oauth-enable-vault-wf
      inputs:
        parameters:
          - name: repo
          - name: server-url
        artifacts:
          - name: kube-config
      steps:
        - - name: git-clone
            templateRef:
              name: git-clone-template
              template: git-clone
            arguments:
              parameters:
                - name: ssh-url
                  value: "{{inputs.parameters.repo}}"

        - - name: gen-values
            template: gen-values
            arguments:
              parameters:
                - name: server-url
                  value: "{{inputs.parameters.server-url}}"
                - name: script
                  value: |
                    j2 /repo/.setup/oauth-values.j2 -o /j2-tmp.sh;
              artifacts:
                - name: repo
                  from: "{{steps.git-clone.outputs.artifacts.repo}}"

        - - name: enable-oidc-vault
            template: enable-oidc-vault
            arguments:
              parameters:
                - name: server-url
                  value: "{{inputs.parameters.server-url}}"
                - name: script
                  value: |
                    kubectl cp /tmp/j2-tmp.sh vault/tooling-vault-0:/tmp/j2-tmp.sh;

                    kubectl exec -i tooling-vault-0 -n vault -- sh /tmp/j2-tmp.sh;
                    kubectl exec -i tooling-vault-0 -n vault -- rm /tmp/j2-tmp.sh;
              artifacts:
                - name: kube-config
                  from: "{{inputs.artifacts.kube-config}}"
                - name: value-file
                  from: "{{steps.gen-values.outputs.artifacts.value-file}}"

    - name: gen-values
      metadata:
        annotations:
          vault.hashicorp.com/agent-inject: "true"
          vault.hashicorp.com/role: "k8s-secrets"
          vault.hashicorp.com/agent-inject-secret-oauth-creds: "k8s/data/oauth/creds"
          vault.hashicorp.com/agent-inject-template-oauth-creds: |
            {{ with secret "k8s/data/oauth/creds" -}}
              export oauth_tenant_id="{{ .Data.data.tenantid }}"
              export oauth_client_id="{{ .Data.data.clientid }}"
              export oauth_vault="{{ .Data.data.vault }}"
            {{- end }}
          vault.hashicorp.com/agent-inject-secret-vault-url: "k8s/data/configs/vault-url"
          vault.hashicorp.com/agent-inject-template-vault-url: |
            {{ with secret "k8s/data/configs/vault-url" -}}
              export vault_fqdn="{{ .Data.data.url }}"
            {{- end }}
      inputs:
        parameters:
          - name: server-url
          - name: script
        artifacts:
          - name: repo
            path: /repo
      container:
        image: "{{inputs.parameters.server-url}}/tooling-j2cli/tooling-j2cli"
        command: ["/bin/sh", "-c"]
        args:
          - |
            for f in /vault/**/*; do source $f; done;

            #Script
            {{inputs.parameters.script}}
      outputs:
        artifacts:
          - name: value-file
            path: "/j2-tmp.sh"

    - name: enable-oidc-vault
      metadata:
        annotations:
          vault.hashicorp.com/agent-inject: "true"
          vault.hashicorp.com/role: "k8s-secrets"
          vault.hashicorp.com/agent-inject-secret-oauth-creds: "k8s/data/secrets/vault"
          vault.hashicorp.com/agent-inject-template-oauth-creds: |
            {{ with secret "k8s/data/secrets/vault" -}}
              export root_token="{{ .Data.data.root_token }}"
            {{- end }}         
      inputs:
        parameters:
          - name: server-url
          - name: script
        artifacts:
          - name: kube-config
            path: /.kube/config
          - name: value-file
            mode: 0755
            path: /tmp/j2-tmp.sh
          - name: kubectl
            path: /bin/kubectl
            mode: 0755
            http:
              url: https://storage.googleapis.com/kubernetes-release/release/v1.19.0/bin/linux/amd64/kubectl
      container:
        image: alpine/helm
        command: ["/bin/sh", "-c"]
        args:
          - |
            for f in /vault/**/*; do source $f; done;
            export KUBECONFIG=/.kube/config;
            kubectl exec -i tooling-vault-0 -n vault -- vault login $root_token -no-print=true 1>/dev/null;

            #Script
            {{inputs.parameters.script}}