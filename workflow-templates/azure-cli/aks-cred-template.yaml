apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: az-aks-cred-template
  namespace: argo
spec:
  entrypoint: az-aks-cred
  templates:
  - name: az-aks-cred
    inputs:
      parameters:
      - name: sp-secret-name
        default: dataplatform-dev
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "k8s-secrets"
        vault.hashicorp.com/agent-inject-secret-config: "k8s/data/oauth/creds"
        vault.hashicorp.com/agent-inject-template-config: |
          {{ with secret "k8s/data/configs/env" -}}
            export environment_name="{{ .Data.data.env }}"
          {{- end }}
        vault.hashicorp.com/agent-inject-secret-service-principal: "k8s/data/service-principals/{{inputs.parameters.sp-secret-name}}"
        vault.hashicorp.com/agent-inject-template-service-principal: |
          {{ with secret "k8s/data/service-principals/{{inputs.parameters.sp-secret-name}}" -}}
            export sp_client_id="{{ .Data.data.clientid }}"
            export sp_client_secret="{{ .Data.data.clientsecret }}"
            export sp_subscription_id="{{ .Data.data.subscriptionid }}"
            export sp_tenant_id="{{ .Data.data.tenantid }}"
          {{- end }}
    container:
      image: mcr.microsoft.com/azure-cli
      command: ["/bin/sh", "-c"]
      args: 
        - |
          for f in /vault/secrets/*; do source $f; done;
          az login --service-principal -u $sp_client_id -p $sp_client_secret --tenant $sp_tenant_id --output none;
          az account set --subscription $sp_subscription_id;

          az aks get-credentials --resource-group service-aks-$environment_name --name service-aks-$environment_name
    outputs:
      artifacts:
      - name: kube-config
        path: '/root/.kube/config'
