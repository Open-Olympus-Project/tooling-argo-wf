apiVersion: batch/v1
kind: Job
metadata:
  name: minio-{{ .Release.Name }}-make-bucket-job
  labels:
    app: minio-{{ .Release.Name }}-make-bucket-job
  annotations:
    "helm.sh/hook": "post-install"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  template:
    metadata:
      labels:
        app: minio-{{ .Release.Name }}-make-bucket-job
        release: {{ .Release.Name }}
    spec:
      restartPolicy: OnFailure
      containers:
      - name: minio-mc
        image: minio/mc:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio-creds-secret
              key: accesskey
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: minio-creds-secret
              key: secretkey
        - name: MINIO_ENDPOINT
          value: https://tooling.minio.svc.cluster.local
        - name: MINIO_PORT
          value: "443"
        - name: BUCKET
          value: "my-bucket"
        command: ["/bin/bash", "-ce"]
        args:
        - | 
          checkBucketExists() {
            ebucket=$1
            CMD=$(${MC} ls myminio | grep "\s$ebucket/$" > /dev/null 2>&1)
            return $?
          }
          MC="mc --insecure"
          ${MC} config host add myminio $MINIO_ENDPOINT:$MINIO_PORT $MINIO_ACCESS_KEY $MINIO_SECRET_KEY
          # Create the bucket if it does not exist
          for iBUCKET in $BUCKET
          do
            if ! checkBucketExists $iBUCKET; then
              echo "Creating bucket $iBUCKET"
              ${MC} mb myminio/$iBUCKET
            else
              echo "Bucket $iBUCKET already exists."
            fi
          done

