{{ $value := index .Values "argo-workflows" }}
{{- if $value.workflow.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $value.workflow.serviceAccount.name }}
  {{- if $value.workflow.namespace }}
  namespace: {{ $value.workflow.namespace }}
  {{- end }}
  {{- with $value.workflow.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
{{- end }}
---
{{- if $value.workflow.rbac.create -}}
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ .Release.Name }}-workflow
  {{- if $value.workflow.namespace }}
  namespace: {{ $value.workflow.namespace }}
  {{- end }}
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - watch
  - patch
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - get
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - eventsources
  - sensors
  - workflows
  - workfloweventbindings
  - workflowtemplates
  - cronworkflows
  - clusterworkflowtemplates
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
{{- end }}
---
{{- if $value.workflow.rbac.create -}}
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Release.Name }}-workflow
{{- if $value.workflow.namespace }}
  namespace: {{ $value.workflow.namespace }}
{{- end }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ .Release.Name }}-workflow
subjects:
- kind: ServiceAccount
  name: {{ $value.workflow.serviceAccount.name }}
  {{- if $value.workflow.namespace }}
  namespace: {{ $value.workflow.namespace }}
  {{- end }}
{{- end }}
